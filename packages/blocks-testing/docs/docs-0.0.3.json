{"id":0,"name":"@airtable/blocks","kind":0,"flags":{},"children":[{"id":14026,"name":"\"blocks-testing/src/index\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/blocks-testing/src/index.ts","sources":[{"fileName":"blocks-testing/src/index.ts","line":1,"character":0}]},{"id":13655,"name":"\"blocks-testing/src/mock_airtable_interface\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/blocks-testing/src/mock_airtable_interface.ts","children":[{"id":13687,"name":"FieldFixtureData","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"A representation of the state of a Field"},"children":[{"id":13690,"name":"description","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The description to assign to the simulated Field"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":227,"character":15}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"null"}]}},{"id":13688,"name":"id","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A unique identifier for the simulated Field"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":223,"character":6}],"type":{"type":"reference","name":"FieldId"}},{"id":13689,"name":"name","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The name to assign to the simulated Field"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":225,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":13692,"name":"options","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Options associated with the simulated Field"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":231,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"null"},{"type":"reflection","declaration":{"id":13693,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":13694,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":13695,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"unknown"}}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":231,"character":19}]}}]}},{"id":13691,"name":"type","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The type of the simulated Field"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":229,"character":8}],"type":{"type":"reference","name":"FieldType"}}],"groups":[{"title":"Properties","kind":1024,"children":[13690,13688,13689,13692,13691]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":221,"character":26}]},{"id":13670,"name":"FixtureData","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"A complete set of information necessary to initialize a simulated Airtable\nBase in automated test environments."},"children":[{"id":13672,"name":"base","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"A representation of the state of an Airtable Base"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":187,"character":8}],"type":{"type":"reflection","declaration":{"id":13673,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":13677,"name":"collaborators","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":191,"character":21}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"intersection","types":[{"type":"reference","name":"CollaboratorData"},{"type":"reflection","declaration":{"id":13678,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":13679,"name":"isActive","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":191,"character":57}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Variables","kind":32,"children":[13679]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":191,"character":47}]}}]}]}},{"id":13674,"name":"id","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":188,"character":10}],"type":{"type":"reference","name":"BaseId"}},{"id":13675,"name":"name","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":189,"character":12}],"type":{"type":"intrinsic","name":"string"}},{"id":13676,"name":"tables","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":190,"character":14}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"reference","name":"TableFixtureData","id":13680}]}}],"groups":[{"title":"Variables","kind":32,"children":[13677,13674,13675,13676]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":187,"character":9}]}}},{"id":13671,"name":"globalConfig","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"An optional object describing the initial state of the globalConfig\nwhich is associated with the simulated Base. If omitted, the Base's\nglobalConfig will be initially empty."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":185,"character":16}],"type":{"type":"reference","name":"GlobalConfigData"}}],"groups":[{"title":"Properties","kind":1024,"children":[13672,13671]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":179,"character":28}]},{"id":13708,"name":"RecordFixtureData","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"A representation of the state of a Record"},"children":[{"id":13712,"name":"cellValuesByFieldId","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A mapping of field identifiers to cell values"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":277,"character":23}],"type":{"type":"reference","name":"ObjectMap","typeArguments":[{"type":"reference","name":"FieldId"},{"type":"intrinsic","name":"unknown"}]}},{"id":13710,"name":"commentCount","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The number of comments to assign to the simulated record"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":273,"character":16}],"type":{"type":"intrinsic","name":"number"}},{"id":13711,"name":"createdTime","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The time the simulated record should appear to have been created"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":275,"character":15}],"type":{"type":"intrinsic","name":"string"}},{"id":13709,"name":"id","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A unique identifier for the simulated Record"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":271,"character":6}],"type":{"type":"reference","name":"RecordId"}}],"groups":[{"title":"Properties","kind":1024,"children":[13712,13710,13711,13709]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":269,"character":27}]},{"id":13680,"name":"TableFixtureData","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"A representation of the state of a Table"},"children":[{"id":13683,"name":"description","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The description to assign to the simulated Table"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":202,"character":15}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"null"}]}},{"id":13684,"name":"fields","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Fixture data for the simulated Fields that should be present in the\nsimulated Table when it is initialized."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":207,"character":10}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"reference","name":"FieldFixtureData","id":13687}]}},{"id":13681,"name":"id","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A unique identifier for the simulated Tbale"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":198,"character":6}],"type":{"type":"reference","name":"TableId"}},{"id":13682,"name":"name","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The name to assign to the simulated Table"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":200,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":13686,"name":"records","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Fixture data for the simulated Records that should be present in the\nsimulated Table when it is initialized."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":217,"character":11}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"reference","name":"RecordFixtureData","id":13708}]}},{"id":13685,"name":"views","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"Fixture data for the simulated Views that should be present in the\nsimulated Table when it is initialized."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":212,"character":9}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"reference","name":"ViewFixtureData","id":13696}]}}],"groups":[{"title":"Properties","kind":1024,"children":[13683,13684,13681,13682,13686,13685]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":196,"character":26}]},{"id":13696,"name":"ViewFixtureData","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"A representation of the state of a View"},"children":[{"id":13700,"name":"fieldOrder","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A description of how simulated Fields should be sequenced within the\nsimulated View"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":246,"character":14}],"type":{"type":"reflection","declaration":{"id":13701,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":13702,"name":"fieldIds","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":247,"character":16}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"reference","name":"FieldId"}]}},{"id":13703,"name":"visibleFieldCount","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":248,"character":25}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Variables","kind":32,"children":[13702,13703]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":246,"character":15}]}}},{"id":13697,"name":"id","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A unique identifier for the simulated View"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":237,"character":6}],"type":{"type":"reference","name":"ViewId"}},{"id":13698,"name":"name","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The name to assign to the simulated View"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":239,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":13704,"name":"records","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A set of references to Records contained within the simulated view. This\nis distinct from the complete fixture data for the simulated Records."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":254,"character":11}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"reference","name":"ViewRecordFixtureData","id":13705}]}},{"id":13699,"name":"type","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The type of the simulated view"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":241,"character":8}],"type":{"type":"reference","name":"ViewType"}}],"groups":[{"title":"Properties","kind":1024,"children":[13700,13697,13698,13704,13699]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":235,"character":25}]},{"id":13705,"name":"ViewRecordFixtureData","kind":256,"kindString":"Interface","flags":{},"comment":{"shortText":"A reference to Record contained within a simulated view. This is disctinct\nfrom the complete fixture data for the simulated Record."},"children":[{"id":13707,"name":"color","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"The color associated with a Record's membership in a View."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":265,"character":9}],"type":{"type":"union","types":[{"type":"reference","name":"Color"},{"type":"intrinsic","name":"null"}]}},{"id":13706,"name":"id","kind":1024,"kindString":"Property","flags":{},"comment":{"shortText":"A value which uniquely identifies a Record within a base."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":263,"character":6}],"type":{"type":"reference","name":"RecordId"}}],"groups":[{"title":"Properties","kind":1024,"children":[13707,13706]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":261,"character":31}]},{"id":13656,"name":"WatchableKeysAndArgs","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"A mapping relating the names of event subscriptions available on\n`TestDriver` instances to the arguments that are provided when one of those\nevents is triggered."},"children":[{"id":13662,"name":"enterFullscreen","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"Triggered when the SDK has been induced to enter full screen mode."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":155,"character":19}],"type":{"type":"intrinsic","name":"null"}},{"id":13663,"name":"exitFullscreen","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"Triggered when the SDK has been induced to exit full screen mode."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":159,"character":18}],"type":{"type":"intrinsic","name":"null"}},{"id":13658,"name":"expandRecord","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"Triggered when the SDK has been induced to expand a Record in the user\ninterface"},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":151,"character":16}],"type":{"type":"reflection","declaration":{"id":13659,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":13660,"name":"recordId","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":151,"character":27}],"type":{"type":"reference","name":"RecordId"}},{"id":13661,"name":"recordIds","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":151,"character":48}],"type":{"type":"union","types":[{"type":"reference","name":"Array","typeArguments":[{"type":"reference","name":"RecordId"}]},{"type":"intrinsic","name":"null"}]}}],"groups":[{"title":"Variables","kind":32,"children":[13660,13661]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":151,"character":17}]}}},{"id":13665,"name":"expandRecordList","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"Triggered when the SDK has been induced to expand a list of Records in\nthe user interface."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":168,"character":20}],"type":{"type":"reflection","declaration":{"id":13666,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":13669,"name":"fieldIds","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":171,"character":16}],"type":{"type":"union","types":[{"type":"reference","name":"Array","typeArguments":[{"type":"intrinsic","name":"string"}]},{"type":"intrinsic","name":"null"}]}},{"id":13668,"name":"recordIds","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":170,"character":17}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"intrinsic","name":"string"}]}},{"id":13667,"name":"tableId","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":169,"character":15}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Variables","kind":32,"children":[13669,13668,13667]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":168,"character":21}]}}},{"id":13657,"name":"mutation","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"Triggered whenever the SDK has been induced to persist a change to the\nBase."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":146,"character":12}],"type":{"type":"reference","name":"TestMutation"}},{"id":13664,"name":"setFullscreenMaxSize","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"Triggered when the maximum full screen size is modified."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":163,"character":24}],"type":{"type":"reference","name":"ViewportSizeConstraint"}}],"groups":[{"title":"Properties","kind":1024,"children":[13662,13663,13658,13665,13657,13664]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":141,"character":37}]},{"id":13943,"name":"PickRecord","kind":4194304,"kindString":"Type alias","flags":{"isExported":true},"comment":{"shortText":"A callback function allowing tests to simulate user interaction with the\nexpanded record picker UI. The testing library will invoke this function\nwhenever the App under test uses the `expandRecordPickerAsync` API, and the\nreturn value of this function will be provided to the App under test as the\nRecord that the simulated user selected."},"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":301,"character":22}],"type":{"type":"reflection","declaration":{"id":13944,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":13945,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":13946,"name":"tableId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":13947,"name":"recordIds","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Array","typeArguments":[{"type":"intrinsic","name":"string"}]}},{"id":13948,"name":"fieldIds","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Array","typeArguments":[{"type":"intrinsic","name":"string"}]},{"type":"intrinsic","name":"null"}]}},{"id":13949,"name":"shouldAllowCreatingRecord","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"reference","name":"RecordId"},{"type":"intrinsic","name":"null"}]}}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":301,"character":24}]}}}],"groups":[{"title":"Interfaces","kind":256,"children":[13687,13670,13708,13680,13696,13705,13656]},{"title":"Type aliases","kind":4194304,"children":[13943]}],"sources":[{"fileName":"blocks-testing/src/mock_airtable_interface.ts","line":1,"character":0}]},{"id":13957,"name":"\"blocks-testing/src/test_driver\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/blocks-testing/src/test_driver.tsx","children":[{"id":13958,"name":"TestDriver","kind":128,"kindString":"Class","flags":{"isExported":true},"comment":{"shortText":"A class designed to faciliate the automated testing of Airtable Apps outside\nof a production Apps environment. Each instance creates a simulated Airtable\nBase which is distinct from any other Base created in this way. Custom Apps\ncan be applied to a given instance; see {@link Container}."},"children":[{"id":13961,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true},"comment":{"shortText":"Create an instance of the test driver, initializing a simulated Airtable\nBase to take the state described by the provided fixture data."},"signatures":[{"id":13962,"name":"new TestDriver","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Create an instance of the test driver, initializing a simulated Airtable\nBase to take the state described by the provided fixture data."},"parameters":[{"id":13963,"name":"fixtureData","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FixtureData","id":13670}}],"type":{"type":"reference","name":"TestDriver","id":13958}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":24,"character":14}]},{"id":13964,"name":"base","kind":262144,"kindString":"Accessor","flags":{"isExported":true},"comment":{"shortText":"The simulated Airtable Base associated with this instance."},"getSignature":[{"id":13965,"name":"__get","kind":524288,"kindString":"Get signature","flags":{},"comment":{"shortText":"The simulated Airtable Base associated with this instance."},"type":{"type":"reference","name":"Base"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":39,"character":12}]},{"id":13966,"name":"cursor","kind":262144,"kindString":"Accessor","flags":{"isExported":true},"comment":{"shortText":"The Cursor associated with this instance's Base."},"getSignature":[{"id":13967,"name":"__get","kind":524288,"kindString":"Get signature","flags":{},"comment":{"shortText":"The Cursor associated with this instance's Base."},"type":{"type":"reference","name":"Cursor"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":46,"character":14}]},{"id":13970,"name":"globalConfig","kind":262144,"kindString":"Accessor","flags":{"isExported":true},"comment":{"shortText":"A simulated globalConfig. This always starts empty."},"getSignature":[{"id":13971,"name":"__get","kind":524288,"kindString":"Get signature","flags":{},"comment":{"shortText":"A simulated globalConfig. This always starts empty."},"type":{"type":"reference","name":"GlobalConfig"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":60,"character":20}]},{"id":13968,"name":"session","kind":262144,"kindString":"Accessor","flags":{"isExported":true},"comment":{"shortText":"A session. This will correspond to the first collaborator in your fixture data."},"getSignature":[{"id":13969,"name":"__get","kind":524288,"kindString":"Get signature","flags":{},"comment":{"shortText":"A session. This will correspond to the first collaborator in your fixture data."},"type":{"type":"reference","name":"Session"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":53,"character":15}]},{"id":13972,"name":"Container","kind":2048,"kindString":"Method","flags":{"isExported":true},"comment":{"shortText":"A React Component which may be used to wrap App Components, enabling\nthem to run outside of a production Apps environment.","tags":[{"tag":"example","text":"\n```js\nconst MyCustomApp = require('../src/my_custom_app');\nconst testDriver = new TestDriver(fixtureData);\n\nrender(\n    <testDriver.Container>\n        <MyCustomApp />\n    </testDriver.Container>\n);\n```\n"}]},"signatures":[{"id":13973,"name":"Container","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"A React Component which may be used to wrap App Components, enabling\nthem to run outside of a production Apps environment.","tags":[{"tag":"example","text":"\n```js\nconst MyCustomApp = require('../src/my_custom_app');\nconst testDriver = new TestDriver(fixtureData);\n\nrender(\n    <testDriver.Container>\n        <MyCustomApp />\n    </testDriver.Container>\n);\n```\n"}]},"parameters":[{"id":13974,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"originalName":"__0","type":{"type":"intrinsic","name":"Object"}}],"type":{"type":"reference","name":"Element"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":80,"character":13}]},{"id":13981,"name":"deleteFieldAsync","kind":2048,"kindString":"Method","flags":{"isExported":true},"comment":{"shortText":"Destroy a Field in the simulated Base."},"signatures":[{"id":13982,"name":"deleteFieldAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Destroy a Field in the simulated Base."},"parameters":[{"id":13983,"name":"tableIdOrName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TableId"},{"type":"intrinsic","name":"string"}]}},{"id":13984,"name":"fieldIdOrName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"FieldId"},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":92,"character":26}]},{"id":13985,"name":"deleteTable","kind":2048,"kindString":"Method","flags":{"isExported":true},"comment":{"shortText":"Destroy a Table in the simulated Base."},"signatures":[{"id":13986,"name":"deleteTable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Destroy a Table in the simulated Base."},"parameters":[{"id":13987,"name":"tableIdOrName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TableId"},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":106,"character":15}]},{"id":13988,"name":"deleteViewAsync","kind":2048,"kindString":"Method","flags":{"isExported":true},"comment":{"shortText":"Destroy a View in the simulated Base."},"signatures":[{"id":13989,"name":"deleteViewAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Destroy a View in the simulated Base."},"parameters":[{"id":13990,"name":"tableIdOrName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TableId"},{"type":"intrinsic","name":"string"}]}},{"id":13991,"name":"viewIdOrName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"ViewId"},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":131,"character":25}]},{"id":13992,"name":"setActiveCursorModels","kind":2048,"kindString":"Method","flags":{"isExported":true},"comment":{"shortText":"Update the active Table and/or the active View of the App's {@link\nCursor}. Either `table` or `view` must be specified.","tags":[{"tag":"example","text":"\n```js\ntestDriver.setActiveCursorModels({view: 'My grid view'});\n```\n"}]},"signatures":[{"id":13993,"name":"setActiveCursorModels","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Update the active Table and/or the active View of the App's {@link\nCursor}. Either `table` or `view` must be specified.","tags":[{"tag":"example","text":"\n```js\ntestDriver.setActiveCursorModels({view: 'My grid view'});\n```\n"}]},"parameters":[{"id":13994,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"originalName":"__0","type":{"type":"intrinsic","name":"Object"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":151,"character":25}]},{"id":14004,"name":"simulateExpandedRecordSelection","kind":2048,"kindString":"Method","flags":{"isExported":true},"comment":{"shortText":"Specify the outcome of a request for the user to select a record in the\nUI created by `expandRecordPickerAsync`.","tags":[{"tag":"example","text":"\n```js\nimport MyCustomApp from '../src/my_custom_app';\nimport {render, screen} from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport TestDriver from '@airtable/blocks-testing';\n\nconst testDriver = new TestDriver(fixtureData);\n\ntestDriver.simulateExpandedRecordSelection((tableId, recordIds) => {\n    return recordIds[1];\n});\n\nrender(\n    <testDriver.Container>\n        <MyCustomApp />\n    </testDriver.Container>\n);\n\n// Simulate a user clicking on a button in MyCustomApp labeled with the\n// text \"Choose record\". If MyCustomApp reacts to this event by invoking\n// the SDK's `expandRecordPickerAsync`, then it will receive the second\n// available record due to the function that is provided to\n// `simulateExpandedRecordSelection` above.\nuserEvent.click(screen.getByLabelText('Choose record'));\n```\n"}]},"signatures":[{"id":14005,"name":"simulateExpandedRecordSelection","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Specify the outcome of a request for the user to select a record in the\nUI created by `expandRecordPickerAsync`.","tags":[{"tag":"example","text":"\n```js\nimport MyCustomApp from '../src/my_custom_app';\nimport {render, screen} from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport TestDriver from '@airtable/blocks-testing';\n\nconst testDriver = new TestDriver(fixtureData);\n\ntestDriver.simulateExpandedRecordSelection((tableId, recordIds) => {\n    return recordIds[1];\n});\n\nrender(\n    <testDriver.Container>\n        <MyCustomApp />\n    </testDriver.Container>\n);\n\n// Simulate a user clicking on a button in MyCustomApp labeled with the\n// text \"Choose record\". If MyCustomApp reacts to this event by invoking\n// the SDK's `expandRecordPickerAsync`, then it will receive the second\n// available record due to the function that is provided to\n// `simulateExpandedRecordSelection` above.\nuserEvent.click(screen.getByLabelText('Choose record'));\n```\n"}]},"parameters":[{"id":14006,"name":"pickRecord","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"PickRecord","id":13943}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":233,"character":35}]},{"id":13998,"name":"simulatePermissionCheck","kind":2048,"kindString":"Method","flags":{"isExported":true},"comment":{"shortText":"Specify the outcome of internal permission checks. This influences the\nbehavior of not only explicit permission checks from Apps code but also\nthe outcome of model operations such as {@link createRecordsAsync}."},"signatures":[{"id":13999,"name":"simulatePermissionCheck","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Specify the outcome of internal permission checks. This influences the\nbehavior of not only explicit permission checks from Apps code but also\nthe outcome of model operations such as {@link createRecordsAsync}."},"parameters":[{"id":14000,"name":"check","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":14001,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":14002,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":14003,"name":"mutation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Mutation"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":198,"character":34}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":198,"character":27}]},{"id":14018,"name":"unwatch","kind":2048,"kindString":"Method","flags":{"isExported":true},"comment":{"shortText":"De-register a function which was previously registered with {@link\nwatch}."},"signatures":[{"id":14019,"name":"unwatch","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"De-register a function which was previously registered with {@link\nwatch}."},"typeParameter":[{"id":14020,"name":"Key","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"WatchableKeysAndArgs"}}}],"parameters":[{"id":14021,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"Key","constraint":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"WatchableKeysAndArgs"}}}},{"id":14022,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":14023,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":14024,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":14025,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"unknown","name":"WatchableKeysAndArgs[Key]"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":287,"character":11}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":285,"character":11}]},{"id":14007,"name":"userSelectRecords","kind":2048,"kindString":"Method","flags":{"isExported":true},"comment":{"shortText":"Simulate a user visually selecting a set of Records in the active Table.\nThis operation is unrelated to an App's programmatic \"selection\" of\nrecords via, e.g. {@link Table.selectRecords}. To deselect all records,\ninvoke this method with an empty array."},"signatures":[{"id":14008,"name":"userSelectRecords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Simulate a user visually selecting a set of Records in the active Table.\nThis operation is unrelated to an App's programmatic \"selection\" of\nrecords via, e.g. {@link Table.selectRecords}. To deselect all records,\ninvoke this method with an empty array."},"parameters":[{"id":14009,"name":"recordIds","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Array","typeArguments":[{"type":"reference","name":"RecordId"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":243,"character":21}]},{"id":14010,"name":"watch","kind":2048,"kindString":"Method","flags":{"isExported":true},"comment":{"shortText":"Register a function to be invoked in response to a given internal event."},"signatures":[{"id":14011,"name":"watch","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Register a function to be invoked in response to a given internal event."},"typeParameter":[{"id":14012,"name":"Key","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"WatchableKeysAndArgs"}}}],"parameters":[{"id":14013,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"Key","constraint":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"WatchableKeysAndArgs"}}}},{"id":14014,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":14015,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":14016,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":14017,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"unknown","name":"WatchableKeysAndArgs[Key]"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":276,"character":11}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":274,"character":9}]}],"groups":[{"title":"Constructors","kind":512,"children":[13961]},{"title":"Accessors","kind":262144,"children":[13964,13966,13970,13968]},{"title":"Methods","kind":2048,"children":[13972,13981,13985,13988,13992,14004,13998,14018,14007,14010]}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":20,"character":31}]}],"groups":[{"title":"Classes","kind":128,"children":[13958]}],"sources":[{"fileName":"blocks-testing/src/test_driver.tsx","line":1,"character":0}]},{"id":822,"name":"@airtable/blocks/models: Abstract models","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/watchable.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/watchable.d.ts","line":1,"character":0}]},{"id":1281,"name":"@airtable/blocks/models: Aggregators","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/aggregators.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/aggregators.d.ts","line":1,"character":0}]},{"id":1244,"name":"@airtable/blocks/models: Base","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/collaborator.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/collaborator.d.ts","line":1,"character":0}]},{"id":605,"name":"@airtable/blocks/models: Field","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/field.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/field.d.ts","line":1,"character":0}]},{"id":814,"name":"@airtable/blocks/models: Record","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/record.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/record.d.ts","line":1,"character":0}]},{"id":2306,"name":"@airtable/blocks/models: Record Coloring","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/models/record_coloring.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/models/record_coloring.d.ts","line":1,"character":0}]},{"id":1496,"name":"@airtable/blocks/models: RecordQueryResult","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/models/grouped_record_query_result.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/models/grouped_record_query_result.d.ts","line":1,"character":0}]},{"id":581,"name":"@airtable/blocks/models: Table","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/table.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/table.d.ts","line":1,"character":0}]},{"id":549,"name":"@airtable/blocks/models: View","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/view.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/view.d.ts","line":1,"character":0}]},{"id":845,"name":"@airtable/blocks/models: globalConfig","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/global_config.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/global_config.d.ts","line":1,"character":0}]},{"id":7499,"name":"@airtable/blocks/ui/system: Appearance","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/appearance/background_color.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/appearance/background_color.d.ts","line":1,"character":0}]},{"id":7562,"name":"@airtable/blocks/ui/system: Dimensions","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/dimensions/height.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/dimensions/height.d.ts","line":1,"character":0}]},{"id":7615,"name":"@airtable/blocks/ui/system: Flex container","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/flex_container/align_content.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/flex_container/align_content.d.ts","line":1,"character":0}]},{"id":7668,"name":"@airtable/blocks/ui/system: Flex item","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/flex_item/flex.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/flex_item/flex.d.ts","line":1,"character":0}]},{"id":7729,"name":"@airtable/blocks/ui/system: Position","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/position/position.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/position/position.d.ts","line":1,"character":0}]},{"id":7486,"name":"@airtable/blocks/ui/system: Responsive props","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/utils/types.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/utils/types.d.ts","line":1,"character":0}]},{"id":7782,"name":"@airtable/blocks/ui/system: Spacing","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/spacing/margin.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/spacing/margin.d.ts","line":1,"character":0}]},{"id":7827,"name":"@airtable/blocks/ui/system: Typography","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/typography/font_family.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/system/typography/font_family.d.ts","line":1,"character":0}]},{"id":11630,"name":"@airtable/blocks/ui/types: Aria props","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/types/aria_props.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/types/aria_props.d.ts","line":1,"character":0}]},{"id":11648,"name":"@airtable/blocks/ui: Box","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/box.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/box.d.ts","line":1,"character":0}]},{"id":11748,"name":"@airtable/blocks/ui: Button","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/button.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/button.d.ts","line":1,"character":0}]},{"id":9221,"name":"@airtable/blocks/ui: CellRenderer","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/cell_renderer.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/cell_renderer.d.ts","line":1,"character":0}]},{"id":11842,"name":"@airtable/blocks/ui: ChoiceToken","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/choice_token.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/choice_token.d.ts","line":1,"character":0}]},{"id":11936,"name":"@airtable/blocks/ui: CollaboratorToken","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/collaborator_token.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/collaborator_token.d.ts","line":1,"character":0}]},{"id":9970,"name":"@airtable/blocks/ui: ColorPalette","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/color_palette.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/color_palette.d.ts","line":1,"character":0}]},{"id":12034,"name":"@airtable/blocks/ui: Dialog","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/dialog_close_button.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/dialog_close_button.d.ts","line":1,"character":0}]},{"id":9902,"name":"@airtable/blocks/ui: FieldIcon","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/field_icon.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/field_icon.d.ts","line":1,"character":0}]},{"id":8511,"name":"@airtable/blocks/ui: FieldPicker","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/field_picker.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/field_picker.d.ts","line":1,"character":0}]},{"id":12535,"name":"@airtable/blocks/ui: FormField","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/form_field.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/form_field.d.ts","line":1,"character":0}]},{"id":12610,"name":"@airtable/blocks/ui: Heading","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/heading.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/heading.d.ts","line":1,"character":0}]},{"id":9773,"name":"@airtable/blocks/ui: Icon","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/icon.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/icon.d.ts","line":1,"character":0}]},{"id":8933,"name":"@airtable/blocks/ui: Input","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/input.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/input.d.ts","line":1,"character":0}]},{"id":12814,"name":"@airtable/blocks/ui: Label","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/label.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/label.d.ts","line":1,"character":0}]},{"id":12900,"name":"@airtable/blocks/ui: Link","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/link.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/link.d.ts","line":1,"character":0}]},{"id":13010,"name":"@airtable/blocks/ui: Loader","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/loader.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/loader.d.ts","line":1,"character":0}]},{"id":13209,"name":"@airtable/blocks/ui: Popover","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/popover.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/popover.d.ts","line":1,"character":0}]},{"id":10386,"name":"@airtable/blocks/ui: ProgressBar","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/progress_bar.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/progress_bar.d.ts","line":1,"character":0}]},{"id":10492,"name":"@airtable/blocks/ui: RecordCard","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/record_card.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/record_card.d.ts","line":1,"character":0}]},{"id":10681,"name":"@airtable/blocks/ui: RecordCardList","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/record_card_list.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/record_card_list.d.ts","line":1,"character":0}]},{"id":8032,"name":"@airtable/blocks/ui: Select","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/select_and_select_buttons_helpers.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/select_and_select_buttons_helpers.d.ts","line":1,"character":0}]},{"id":11070,"name":"@airtable/blocks/ui: SelectButtons","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/select_buttons_synced.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/select_buttons_synced.d.ts","line":1,"character":0}]},{"id":11123,"name":"@airtable/blocks/ui: Switch","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/switch.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/switch.d.ts","line":1,"character":0}]},{"id":8308,"name":"@airtable/blocks/ui: TablePicker","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/table_picker.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/table_picker.d.ts","line":1,"character":0}]},{"id":12712,"name":"@airtable/blocks/ui: Text","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/text.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/text.d.ts","line":1,"character":0}]},{"id":13400,"name":"@airtable/blocks/ui: TextButton","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/text_button.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/text_button.d.ts","line":1,"character":0}]},{"id":13507,"name":"@airtable/blocks/ui: Tooltip","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/tooltip.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/tooltip.d.ts","line":1,"character":0}]},{"id":8722,"name":"@airtable/blocks/ui: ViewPicker","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/view_picker.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/view_picker.d.ts","line":1,"character":0}]},{"id":11386,"name":"@airtable/blocks/ui: ViewportConstraint","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/viewport_constraint.d.ts","comment":{"tags":[{"tag":"docspath","text":"UI/components/ViewportConstraint\n"}]},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/viewport_constraint.d.ts","line":1,"character":0}]},{"id":443,"name":"@airtable/blocks/ui: colors","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/colors.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/colors.d.ts","line":1,"character":0}]},{"id":9413,"name":"@airtable/blocks/ui: expandRecord","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/expand_record.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/expand_record.d.ts","line":1,"character":0}]},{"id":11484,"name":"@airtable/blocks/ui: initializeBlock","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/initialize_block.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/initialize_block.d.ts","line":1,"character":0}]},{"id":11564,"name":"@airtable/blocks/ui: useBase","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_base.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_base.d.ts","line":1,"character":0}]},{"id":11568,"name":"@airtable/blocks/ui: useCursor","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_cursor.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_cursor.d.ts","line":1,"character":0}]},{"id":11602,"name":"@airtable/blocks/ui: useGlobalConfig","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_global_config.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_global_config.d.ts","line":1,"character":0}]},{"id":11613,"name":"@airtable/blocks/ui: useRecordActionData","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_record_action_data.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_record_action_data.d.ts","line":1,"character":0}]},{"id":11572,"name":"@airtable/blocks/ui: useSession","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_session.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_session.d.ts","line":1,"character":0}]},{"id":11605,"name":"@airtable/blocks/ui: useViewMetadata","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_view_metadata.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_view_metadata.d.ts","line":1,"character":0}]},{"id":11599,"name":"@airtable/blocks/ui: useViewport","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_viewport.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/ui/use_viewport.d.ts","line":1,"character":0}]},{"id":1197,"name":"@airtable/blocks: globalConfig","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/global_config.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/global_config.d.ts","line":1,"character":0}]},{"id":1084,"name":"@airtable/blocks: mutations","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/mutations.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/mutations.d.ts","line":1,"character":0}]},{"id":2183,"name":"@airtable/blocks: settingsButton","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/settings_button.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/settings_button.d.ts","line":1,"character":0}]},{"id":2134,"name":"@airtable/blocks: viewport","kind":1,"flags":{"isExported":true,"isExternal":true},"originalName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/viewport.d.ts","comment":{},"sources":[{"fileName":"/Users/benrazon/h/source/blocks-sdk/packages/sdk/dist/types/src/types/viewport.d.ts","line":1,"character":0}]}],"groups":[{"title":"External modules","kind":1,"children":[14026,13655,13957,822,1281,1244,605,814,2306,1496,581,549,845,7499,7562,7615,7668,7729,7486,7782,7827,11630,11648,11748,9221,11842,11936,9970,12034,9902,8511,12535,12610,9773,8933,12814,12900,13010,13209,10386,10492,10681,8032,11070,11123,8308,12712,13400,13507,8722,11386,443,9413,11484,11564,11568,11602,11613,11572,11605,11599,1197,1084,2183,2134]}]}